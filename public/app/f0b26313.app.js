"use strict";angular.module("appApp",["ngCookies","ngResource","ngSanitize","ngAnimate","btford.socket-io","ui.router","ui.bootstrap","growlNotifications","angularFileUpload"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider",function(a,b,c,d){b.otherwise("/"),c.html5Mode(!0),d.interceptors.push("authInterceptor")}]).factory("authInterceptor",["$rootScope","$q","$cookieStore","$location",function(a,b,c,d){return{request:function(a){return a.headers=a.headers||{},c.get("token")&&(a.headers.Authorization="Bearer "+c.get("token")),a},responseError:function(a){return 401===a.status?(d.path("/"),c.remove("token"),b.reject(a)):b.reject(a)}}}]).run(["$rootScope","$location","Auth",function(a,b,c){a.$on("$stateChangeStart",function(a,d){c.isLoggedInAsync(function(a){d.authenticate&&!a&&b.path("/")})})}]),angular.module("appApp").controller("AccountCtrl",["$scope","Modal","Auth","Notifications",function(a,b,c,d){a.user=angular.extend({},c.getCurrentUser()),a.updateAccount=function(b){b.$valid&&c.updateAccount(a.user.name,a.user.email).then(function(b){d.add({type:"success",message:"Your account has been updated."}),a.user=b})["catch"](function(){d.add({type:"danger",message:"There was an error updating your account."})})},a.changePassword=function(b){b.$valid&&(a.user.newPassword.length<5?a.errors="Password is too short.":a.user.newPassword!==a.user.confirm?a.errors="Confirmation does not match password.":c.changePassword(a.user.oldPassword,a.user.newPassword).then(function(){d.add({type:"success",message:"Your password has been changed."}),a.user.oldPassword="",a.user.newPassword="",a.user.confirm=""})["catch"](function(){d.add({type:"danger",message:"There was an error changing your password."})}))}}]),angular.module("appApp").config(["$stateProvider",function(a){a.state("account",{url:"/account",templateUrl:"app/admin/account/account.html",controller:"AccountCtrl",authenticate:!0})}]),angular.module("appApp").controller("AdminCtrl",["$scope","$location","Auth",function(a,b,c){a.isLoggedIn=c.isLoggedIn,a.isAdmin=c.isAdmin,a.getCurrentUser=c.getCurrentUser,a.logout=function(){c.logout(),b.path("/")}}]),angular.module("appApp").config(["$stateProvider",function(a){a.state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminCtrl",authenticate:!0})}]),angular.module("appApp").controller("ContentCtrl",["$scope",function(a){a.test="d"}]),angular.module("appApp").config(["$stateProvider",function(a){a.state("content",{url:"/content",templateUrl:"app/admin/content/content.html",controller:"ContentCtrl",authenticate:!0})}]),angular.module("appApp").controller("EventsCtrl",["$scope","Modal","Events","Notifications","socket",function(a,b,c,d,e){a.events=c.query(),a.addEvent=function(){b.events.add().then(function(a){c.save({name:a.name,description:a.description,date:a.date,time:a.time,location:a.location},function(){d.add({type:"success",message:"Event has been added."}),e.socket.emit("event:new",a)},function(){d.add({type:"danger",message:"There was error adding the event."})})})},a.removeEvent=function(a){b.confirm["delete"](a.name).then(function(b){b&&c.remove({id:a._id},function(){d.add({type:"success",message:"Event has been removed."}),e.socket.emit("event:removed")},function(){d.add({type:"danger",message:"There was error removing the event."})})})},a.updateEvent=function(a){b.events.update(a).then(function(b){c.update({id:a._id},{name:b.name,description:b.description,date:b.date,time:b.time,location:b.location},function(){d.add({type:"success",message:"Event has been updated."}),e.socket.emit("event:update")},function(){d.add({type:"danger",message:"There was error updating the event."})})})},a.activateEvent=function(a){a.active===!1?c.activate({_id:a._id},function(){d.add({type:"success",message:"Your event has been activated."}),e.socket.emit("event:update")},function(){d.add({type:"danger",message:"There was an error activating your event."})}):c.deactivate({_id:a._id},function(){d.add({type:"success",message:"Your event has been deactivated."}),e.socket.emit("event:update")},function(){d.add({type:"danger",message:"There was an error deactivating your event."})})},e.socket.on("event:new",function(b){a.events.unshift(b)}),e.socket.on("event:removed",function(b){a.events=b}),e.socket.on("event:update",function(b){a.events=b})}]),angular.module("appApp").config(["$stateProvider",function(a){a.state("events",{url:"/events",templateUrl:"app/admin/content/events/events.html",controller:"EventsCtrl",authenticate:!0})}]),angular.module("appApp").controller("ReflectionsCtrl",["$scope","socket","Modal","Reflections","Notifications",function(a,b,c,d,e){a.reflections=d.query(),a.tempReflections=d.getTemp(),a.addReflection=function(){c.reflections.add().then(function(a){d.save({name:a.name,content:a.content,date:a.date,temp:!1},function(){e.add({type:"success",message:"Reflection has been added."}),b.socket.emit("reflection:new",a)},function(){e.add({type:"danger",message:"There was error adding the reflection."})})})},a.reviewReflection=function(a){c.reflections.review(a)},a.removeReflection=function(a){c.confirm["delete"](a.name).then(function(c){c&&d.remove({id:a._id},function(){e.add({type:"success",message:"Reflection was removed."}),b.socket.emit("reflection:removed")},function(){e.add({type:"danger",message:"There was an error removing the reflection."})})})},a.removeFromTemp=function(a){d.removeFromTemp({_id:a._id},function(){e.add({type:"success",message:"Reflection was removed from temporary directory."}),b.socket.emit("reflection:updated")},function(){e.add({type:"danger",message:"There was an error removing the reflection from temporary directory."})})},a.updateReflection=function(a){c.reflections.update(a).then(function(c){d.update({id:a._id},{name:c.name,content:c.content,date:c.date},function(){e.add({type:"success",message:"Reflection has been updated."}),b.socket.emit("reflection:updated")},function(){e.add({type:"danger",message:"There was error updating the reflection."})})})},a.activateReflection=function(a){a.active===!1?d.activate({_id:a._id},function(){e.add({type:"success",message:"Reflection was activated."}),b.socket.emit("reflection:updated")},function(){e.add({type:"danger",message:"There was an error activating the reflection."})}):d.deactivate({_id:a._id},function(){e.add({type:"success",message:"Reflection was deactivated."}),b.socket.emit("reflection:updated")},function(){e.add({type:"danger",message:"There was an error deactivating the reflection."})})},b.socket.on("reflection:new",function(b){a.reflections.push(b)}),b.socket.on("reflection:update:all",function(b){a.reflections=b.reflections,a.tempReflections=b.temp})}]),angular.module("appApp").config(["$stateProvider",function(a){a.state("reflections",{url:"/reflections",templateUrl:"app/admin/content/reflections/reflections.html",controller:"ReflectionsCtrl",authenticate:!0})}]),angular.module("appApp").controller("UsersCtrl",["$scope","Modal","Auth","User","Notifications","socket",function(a,b,c,d,e,f){a.users=d.query(),a["delete"]=function(a){b.confirm["delete"](a.name).then(function(b){b&&d.remove({id:a._id},function(){e.add({type:"success",message:"User has been deleted."}),f.socket.emit("user:removed")},function(){e.add({type:"danger",message:"There was an error deleting user."})})})},a.addUser=function(){b.users.add().then(function(a){a&&c.createUser({name:a.name,email:a.email,password:a.password}).then(function(a){e.add({type:"success",message:"User has been added."}),f.socket.emit("user:new",a)})["catch"](function(){e.add({type:"danger",message:"There was error adding user."})})})},f.socket.on("user:new",function(b){a.users.push(b)}),f.socket.on("user:update",function(b){a.users=b})}]),angular.module("appApp").config(["$stateProvider",function(a){a.state("users",{url:"/users",templateUrl:"app/admin/users/users.html",controller:"UsersCtrl",authenticate:!0})}]),angular.module("appApp").controller("MainCtrl",["$scope","$location","Auth","User","Notifications",function(a,b,c,d,e){a.config={loginMode:!0},a.user={},a.errors={},c.isAdmin()&&b.path("/admin"),a.login=function(){a.submitted=!0,c.login({email:a.user.email,password:a.user.password}).then(function(){b.path("/admin")})["catch"](function(b){a.errors.other=b.message})},a.forgotPassword=function(){d.forgotPassword({email:a.user.forgotPasswordEmail},function(){e.add({type:"success",message:"A reset link has been sent to your email."})},function(a){e.add({type:"danger",message:a.data})})},a.toggleLoginMode=function(){a.config.loginMode=!a.config.loginMode,a.user={},a.errors={}}}]),angular.module("appApp").config(["$stateProvider",function(a){a.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"MainCtrl"})}]),angular.module("appApp").factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q",function(a,b,c,d,e,f){var g={};return e.get("token")&&(g=d.get()),{login:function(a,b){var h=b||angular.noop,i=f.defer();return c.post("/auth/local",{email:a.email,password:a.password}).success(function(a){return e.put("token",a.token),g=d.get(),i.resolve(a),h()}).error(function(a){return this.logout(),i.reject(a),h(a)}.bind(this)),i.promise},logout:function(){e.remove("token"),g={}},createUser:function(a,b){var c=b||angular.noop;return d.save(a,function(a){return c(a)},function(a){return this.logout(),c(a)}.bind(this)).$promise},changePassword:function(a,b,c){var e=c||angular.noop;return d.changePassword({id:g._id},{oldPassword:a,newPassword:b},function(a){return e(a)},function(a){return e(a)}).$promise},updateAccount:function(a,b,c){var f=c||angular.noop;return d.updateAccount({id:g._id},{name:a,email:b},function(){return e.get("token")&&(g=d.get()),f(g)},function(a){return f(a)}).$promise},getCurrentUser:function(){return g},isLoggedIn:function(){return g.hasOwnProperty("role")},isLoggedInAsync:function(a){g.hasOwnProperty("$promise")?g.$promise.then(function(){a(!0)})["catch"](function(){a(!1)}):a(g.hasOwnProperty("role")?!0:!1)},isAdmin:function(){return"admin"===g.role},getToken:function(){return e.get("token")}}}]),angular.module("appApp").factory("User",["$resource",function(a){return a("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}},updateAccount:{method:"PUT",params:{controller:"account"}},forgotPassword:{method:"POST",params:{id:"forgot"}},resetAccount:{method:"POST",params:{id:"reset"}}})}]),angular.module("appApp").factory("Events",["$resource",function(a){return a("/api/events/:id/:method",{id:"@_id"},{get:{method:"GET",params:{}},remove:{method:"DELETE",params:{}},update:{method:"PUT",params:{}},activate:{method:"PUT",params:{method:"activate"}},deactivate:{method:"PUT",params:{method:"deactivate"}},deleteImage:{method:"DELETE",params:{}}})}]),angular.module("appApp").directive("fileInput",["$rootScope","$timeout","$upload","socket","Notifications",function(a,b,c,d,e){return{scope:{fileType:"@",eventId:"="},restrict:"AE",templateUrl:"components/file-input/file-input.html",link:function(a){var f,g=document.getElementById("browse-input");a.clientFile={selected:!1,progress:0,name:""},a.browseFile=function(){a.clientFile.progress="",b(function(){g.click()},0)},a.upload=function(){if("Image"===a.fileType)c.upload({url:"api/upload/image",fields:{eventId:a.eventId},file:f}).progress(function(b){a.clientFile.progress=Math.floor(100*b.loaded/b.total)}).success(function(){e.add({type:"success",message:"Your image file has been uploaded."}),d.socket.emit("event:update")});else{if("Audio"!==a.fileType)return;c.upload({url:"api/upload",fields:{},file:f}).progress(function(b){a.clientFile.progress=Math.floor(100*b.loaded/b.total)}).success(function(){e.add({type:"success",message:"Your audio file has been uploaded."}),d.socket.emit("audio:updated")})}},angular.element(g).on("change",function(c){f=c.target.files[0],angular.element(g).val(""),b(function(){a.clientFile.name=f.name,a.clientFile.selected=!0},0)})}}}]),angular.module("appApp").factory("Modal",["$rootScope","$q","$modal","$http","Events","Reflections",function(a,b,c,d,e,f){function g(b,d){var e=a.$new();return b=b||{},d=d||"modal-default",angular.extend(e,b),c.open({templateUrl:"components/modal/modal.html",windowClass:d,scope:e})}return{confirm:{"delete":function(a){var c=b.defer(),d=g({modal:{dismissable:!0,title:"Confirm Delete",html:"<p>Are you sure you want to delete <strong>"+a+"</strong> ?</p>",buttons:[{classes:"btn-danger",text:"Delete",click:function(){d.close(!0)}},{classes:"btn-default",text:"Cancel",click:function(){d.dismiss(),c.resolve(!1)}}]}},"modal-danger");return d.result.then(function(a){c.resolve(a)}),c.promise}},reflections:{review:function(a){var c=b.defer(),d=g({modal:{dismissable:!0,title:"Review Reflection",review:!0,reflection:a,buttons:[{classes:"btn-default",text:"Close",click:function(a){c.reject(),d.dismiss(a)}}]}});return c.promise},add:function(){var a=b.defer(),c=g({modal:{dismissable:!0,title:"Add Reflection",form:"reflection",formModel:{name:"",content:"",date:""},datePickerIsOpen:!1,openDatePicker:function(a){a.preventDefault(),a.stopPropagation(),this.datePickerIsOpen=!0},buttons:[{classes:"btn-default",text:"Cancel",click:function(b){a.reject(),c.dismiss(b)}},{classes:"btn-primary",text:"Save",passData:!0,click:function(b){a.resolve(b),c.close()}}]}});return a.promise},update:function(a){var c=b.defer(),d=g({modal:{dismissable:!0,title:"Edit "+a.name,form:"reflection",formModel:{name:a.name,content:a.content,date:a.date,_id:a._id,active:a.active},isActive:function(){return a.active},activateToggle:function(){var b=this;a.active===!0?f.deactivate({_id:a._id},function(){b.formModel.active=!1,a.active=!1},function(){}):f.activate({_id:a._id},function(){b.formModel.active=!0,a.active=!0},function(){})},datePickerIsOpen:!1,openDatePicker:function(a){a.preventDefault(),a.stopPropagation(),this.datePickerIsOpen=!0},buttons:[{classes:"btn-default",text:"Cancel",click:function(a){d.dismiss(a),c.reject()}},{classes:"btn-primary",text:"Update",passData:!0,click:function(a){d.close(),c.resolve(a)}}]}});return c.promise}},events:{add:function(){var a=b.defer(),c=g({modal:{dismissable:!0,title:"Add Event",form:"event",formModel:{name:"",description:"",date:"",time:"",location:""},datePickerIsOpen:!1,openDatePicker:function(a){a.preventDefault(),a.stopPropagation(),this.datePickerIsOpen=!0},buttons:[{classes:"btn-default",text:"Cancel",click:function(b){a.reject(),c.dismiss(b)}},{classes:"btn-primary",text:"Save",passData:!0,click:function(b){a.resolve(b),c.close()}}]}});return a.promise},update:function(a){var c=b.defer(),d=g({modal:{dismissable:!0,title:"Edit "+a.name,form:"event",formModel:{name:a.name,description:a.description,date:a.date,time:a.time,location:a.location,_id:a._id,active:a.active,image:a.image},isActive:function(){return a.active},deleteImage:function(){var b=this;e.deleteImage({id:a._id,method:a.image},function(){a.image="",b.formModel.image=""},function(){})},activateToggle:function(){var b=this;a.active===!0?e.deactivate({_id:a._id},function(){b.formModel.active=!1,a.active=!1},function(){}):e.activate({_id:a._id},function(){b.formModel.active=!0,a.active=!0},function(){})},datePickerIsOpen:!1,openDatePicker:function(a){a.preventDefault(),a.stopPropagation(),this.datePickerIsOpen=!0},buttons:[{classes:"btn-default",text:"Cancel",click:function(a){d.dismiss(a),c.reject()}},{classes:"btn-primary",text:"Update",passData:!0,click:function(a){d.close(),c.resolve(a)}}]}});return c.promise}},users:{add:function(){var a=b.defer(),c=g({modal:{dismissable:!0,title:"Add User",form:"addUser",formModel:{name:"",email:"",password:"",confirm:""},buttons:[{classes:"btn-primary",text:"Save",passData:!0,click:function(b){b.password.length<5?b.errors="Password is too short.":b.password!==b.confirm?b.errors="Confirmation does not match password.":(a.resolve(b),c.close())}},{classes:"btn-default",text:"Cancel",click:function(){a.reject(),c.dismiss()}}]}});return a.promise}}}}]),angular.module("appApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}}),angular.module("appApp").controller("NavbarCtrl",["$scope","$location","Auth",function(a,b,c){a.isCollapsed=!0,a.isLoggedIn=c.isLoggedIn,a.isAdmin=c.isAdmin,a.getCurrentUser=c.getCurrentUser().name,a.logout=function(){c.logout(),b.path("/")},a.isActive=function(a){return a===b.path()}}]),angular.module("appApp").controller("NotificationsCtrl",["$scope","Notifications",function(a,b){a.notifications=b.list}]),angular.module("appApp").service("Notifications",function(){this.list=[],this.add=function(a){return this.list.push(a)}}),angular.module("appApp").factory("Reflections",["$resource",function(a){return a("/api/reflections/:id/:method",{id:"@_id"},{create:{method:"POST",params:{}},get:{method:"GET",params:{}},getActive:{method:"GET",params:{method:"active"},isArray:!0},getTemp:{method:"GET",params:{method:"temp"},isArray:!0},remove:{method:"DELETE",params:{}},update:{method:"PUT",params:{}},activate:{method:"PUT",params:{method:"activate"}},deactivate:{method:"PUT",params:{method:"deactivate"}},removeFromTemp:{method:"PUT",params:{method:"removeFromTemp"}}})}]),angular.module("appApp").factory("socket",["socketFactory",function(a){var b=io("",{path:":8000/socket.io-client"}),c=a({ioSocket:b});return{socket:c}}]),angular.module("appApp").run(["$templateCache",function(a){a.put("app/admin/account/account.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class="panel panel-default"><div class="panel-heading msu4u-panel-heading"><span class=users-panel-title>My Account</span></div><div class=panel-body><h3>Update Account</h3><hr><form name=accountForm class=form novalidate><div class=form-group><input class=form-control name=name ng-model="user.name"></div><div class=form-group><input class=form-control type=email name=email ng-model="user.email"></div><button class="btn btn-primary pull-right" ng-click=updateAccount(accountForm)>Update Account</button></form><br><h3>Change Password</h3><hr><form name=passwordForm class=form novalidate><div class=form-group><input class=form-control type=password name=oldpassword placeholder="Old Password" ng-model="user.oldPassword"></div><div class=form-group><input class=form-control type=password name=newpassword placeholder="New Password" ng-model="user.newPassword"></div><div class=form-group><input class=form-control type=password name=confirm placeholder="Confirm Password" ng-model="user.confirm"></div><button class="btn btn-primary pull-right" ng-click=changePassword(passwordForm)>Change Password</button></form></div></div></div>'),a.put("app/admin/admin.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=admin-container><div class=container><a href=/users><div class="admin-users col-xs-12 col-sm-5 col-sm-offset-1"><div class=admin-users-inner><div class="admin-users-icon fa fa-users"></div><p class=admin-users-title>User Management</p></div></div></a> <a href=/content><div class="admin-content col-xs-12 col-sm-5"><div class=admin-content-inner><div class="admin-content-icon fa fa-file"></div><p class=admin-content-title>Content Management</p></div></div></a></div></div>'),a.put("app/admin/content/content.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class="panel panel-default"><div class="panel-heading msu4u-panel-heading"><span class=content-panel-title>Manage Content</span></div><div class=panel-body><ul class=list-group><li class="list-group-item pointer" ui-sref=events><span class="fa fa-chevron-right pull-right content-chevron"></span>Events</li><li class="list-group-item pointer" ui-sref=reflections><span class="fa fa-chevron-right pull-right content-chevron"></span>Reflections</li></ul></div></div></div>'),a.put("app/admin/content/events/events.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class="panel panel-default"><div class="panel-heading msu4u-panel-heading"><button class="btn btn-default btn-sm pull-right add-events-btn" ng-click=addEvent()>Add Event</button><span class=events-panel-title>Events Management</span></div><div class=panel-body><ul class=list-group><li class="list-group-item pointer" ng-repeat="evt in events"><span class=pull-right><a ng-click=activateEvent(evt) ng-class="{\'text-success\': evt.active, \'text-danger\': !evt.active}"><span class="fa fa-check"></span></a> <a ng-click="updateEvent(evt, $index)"><span class="glyphicon glyphicon-pencil"></span></a> <a ng-click=removeEvent(evt) class=trash><span class="glyphicon glyphicon-trash"></span></a></span>{{evt.name}}</li></ul></div></div></div>'),a.put("app/admin/content/reflections/reflections.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class="panel panel-default"><div class="panel-heading msu4u-panel-heading"><button class="btn btn-default btn-sm pull-right add-events-btn" ng-click=addReflection()>Add Reflection</button><span class=events-panel-title>Reflections Management</span></div><div class=panel-body><ul class=list-group><li class="list-group-item pointer" ng-repeat="ref in reflections"><span class=pull-right><a ng-click=activateReflection(ref) ng-class="{\'text-success\': ref.active, \'text-danger\': !ref.active}"><span class="fa fa-check"></span></a> <a ng-click="updateReflection(ref, $index)"><span class="glyphicon glyphicon-pencil"></span></a> <a ng-click=removeReflection(ref) class=trash><span class="glyphicon glyphicon-trash"></span></a></span>{{ref.name}}</li></ul></div></div><div class="panel panel-default"><div class="panel-heading msu4u-panel-heading"><span class=events-panel-title>User Uploaded Reflections</span></div><div class=panel-body><ul class=list-group ng-if="tempReflections.length > 0"><li class="list-group-item pointer" ng-repeat="ref in tempReflections"><span class=pull-right><a ng-click=removeFromTemp(ref) class=text-success><span class="fa fa-check"></span></a> <a ng-click="removeReflection(ref, $index)" class=trash><span class="glyphicon glyphicon-trash"></span></a></span> <a ng-click=reviewReflection(ref)>{{ref.name}}</a></li></ul><p ng-if="tempReflections.length < 1">There are no user uploaded reflections to review...</p></div></div></div>'),a.put("app/admin/users/users.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class="panel panel-default"><div class="panel-heading msu4u-panel-heading"><button class="btn btn-default btn-sm pull-right add-user-btn" ng-click=addUser()>Add User</button><span>Manage Users</span></div><div class=panel-body><ul class=list-group><li class=list-group-item ng-repeat="user in users"><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span> <a ng-click=delete(user) class=trash><span class="glyphicon glyphicon-trash pull-right"></span></a></li></ul></div></div></div>'),a.put("app/main/main.html",'<div class=login-container><div class=login-header><img src=/assets/images/4f954974.msu4uBranding.png width="" height=""></div><div class=login-body ng-if=config.loginMode><p class=login-text><small>Log in below to your MSU4U account. Or contact the administrator to create your account.</small></p><form class=form name=loginForm novalidate><div class=form-group><input class=form-control placeholder=Email ng-model=user.email required></div><div class=form-group><input class=form-control type=password placeholder=Password ng-model=user.password required></div></form><div class="login-errors has-error"><p class=help-block><small>{{ errors.other }}</small></p></div></div><div class=login-body ng-if=!config.loginMode><p class=login-text><small>Enter the email used to create account and we will send you a link to reset your password.</small></p><form class=form name=forgotForm novalidate><div class=form-group><input class=form-control placeholder=Email ng-model=user.forgotPasswordEmail required></div></form><p class=text-center><button class="btn btn-primary" type=button ng-click=forgotPassword()>Send Reset Link</button></p></div><div class="login-footer container"><div class=row><button class="btn pull-right forgot-btn btn-link" type=button ng-click=toggleLoginMode()>Forgot password?</button> <button class="btn btn-primary login-btn" type=button ng-click=login() ng-if=config.loginMode>Login</button> <button class="btn btn-default login-btn" type=button ng-click=toggleLoginMode() ng-if=!config.loginMode>Cancel</button></div></div></div>'),a.put("components/file-input/file-input.html",'<div class="file-input-container container-fluid"><input type=file id="browse-input"><div class=row><button class="btn btn-default col-xs-12 col-md-4 col-md-offset-2 margin-bottom" id=browse-btn ng-click=browseFile()>Choose {{fileType}}</button> <button class="btn btn-default col-xs-12 col-md-4 margin-bottom" id=upload-btn ng-click=upload() ng-disabled=!clientFile.selected>Upload</button></div><p class=text-center ng-show="clientFile.name != \'\'">Filename: {{clientFile.name}}</p><div class="col col-md-8 col-md-offset-2"><progressbar max=100 value=clientFile.progress>{{clientFile.progress}}%</progressbar></div></div>'),a.put("components/modal/modal.html",'<div class=modal-header><button ng-if=modal.dismissable type=button ng-click=$dismiss() class=close>&times;</button><h4 ng-if=modal.title ng-bind=modal.title class=modal-title></h4></div><div class=modal-body><p ng-if=modal.text ng-bind=modal.text></p><div ng-if=modal.html ng-bind-html=modal.html></div><div ng-if="modal.form == \'addUser\'"><form name=addUserForm class=form novalidate><div class=form-group><input class=form-control name=name placeholder=Name ng-model="modal.formModel.name"></div><div class=form-group><input class=form-control type=email name=email placeholder=Email ng-model="modal.formModel.email"></div><div class=form-group><input class=form-control type=password name=password placeholder=Password ng-model="modal.formModel.password"></div><div class=form-group><input class=form-control type=password name=confirm placeholder="Confirm Password" ng-model="modal.formModel.confirm"></div><p class="text-danger text-center" ng-if=modal.formModel.errors>{{modal.formModel.errors}}</p></form></div><div ng-if="modal.form == \'event\'"><form name=addEventForm class=form novalidate><div class=form-group><input class=form-control name=name placeholder="Event Name" ng-model="modal.formModel.name"></div><div class=form-group><textarea class=form-control name=description placeholder=Description ng-model=modal.formModel.description></textarea></div><div class=form-group><p class=input-group><input class=form-control name=date placeholder=Date ng-model=modal.formModel.date datepicker-popup=dd-MMMM-yyyy is-open="modal.datePickerIsOpen"> <span class=input-group-btn><button type=button class="btn btn-default" ng-click=modal.openDatePicker($event)><i class="glyphicon glyphicon-calendar"></i></button></span></p></div><div class=form-group><input class=form-control name=time placeholder=Time ng-model="modal.formModel.time"></div><div class=form-group><input class=form-control name=location placeholder=Location ng-model="modal.formModel.location"></div><div class=form-group ng-if="!modal.formModel.image.length == 0"><div class=input-group><input class=form-control name=image placeholder=Image ng-model=modal.formModel.image disabled><div class="input-group-addon btn-danger" ng-click=modal.deleteImage()>Delete</div></div></div><div file-input file-type=Image event-id=modal.formModel._id ng-if="modal.formModel.image.length == 0"></div><p class="text-danger text-center" ng-if=modal.formModel.errors>{{modal.formModel.errors}}</p></form></div><div ng-if="modal.form == \'reflection\'"><form name=addReflectionForm class=form novalidate><div class=form-group><input class=form-control name=name placeholder="Reflection Name" ng-model="modal.formModel.name"></div></form><div class=form-group><textarea class=form-control name=content placeholder=Content ng-model=modal.formModel.content rows=10></textarea></div><div class=form-group><p class=input-group><input class=form-control name=date placeholder=Date ng-model=modal.formModel.date datepicker-popup=dd-MMMM-yyyy is-open="modal.datePickerIsOpen"> <span class=input-group-btn><button type=button class="btn btn-default" ng-click=modal.openDatePicker($event)><i class="glyphicon glyphicon-calendar"></i></button></span></p></div></div><div ng-if=modal.review><h2 class=text-center>{{modal.reflection.name}}</h2><p class=text-center><small>{{modal.reflection.date | date}}</small></p><p>{{modal.reflection.content}}</p></div><div ng-if=modal.upload><file-input file-type=Image></file-input></div></div><div class=modal-footer><!--\n    <button class="btn pull-left" ng-class="{\'btn-danger\': !modal.formModel.active, \'btn-success\': modal.formModel.active}" ng-model="modal.formModel.active" ng-click="modal.activateToggle()">\n        <span ng-if="modal.formModel.active == true">Active</span>\n        <span ng-if="!modal.formModel.active == true">Inactive</span>\n    </button>\n    --><span ng-repeat="button in modal.buttons"><button ng-if=button.passData ng-class=button.classes ng-click=button.click(modal.formModel) ng-bind=button.text class=btn></button><button ng-if=!button.passData ng-class=button.classes ng-click=button.click($event) ng-bind=button.text class=btn></button></span></div>'),a.put("components/navbar/navbar.html",'<div class="navbar msu4u-navbar navbar-static-top" ng-controller=NavbarCtrl><div class=container><div class=navbar-header><button class=navbar-toggle type=button ng-click="isCollapsed = !isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a href="/" class=navbar-brand>MSU4U</a></div><div collapse=isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><li ng-show=isAdmin() ng-class="{active: isActive(\'/admin\')}"><a href=/admin>Admin</a></li><li ng-show=isAdmin() ng-class="{active: isActive(\'/users\')}"><a href=/users>User Management</a></li><li ng-show=isAdmin() ng-class="{active: isActive(\'/content\')}"><a href=/content>Content Management</a></li></ul><ul class="nav navbar-nav navbar-right"><li ng-show=isLoggedIn()><p class=navbar-text>Hello {{ getCurrentUser }}</p></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/account\')}"><a href=/account><span class="glyphicon glyphicon-cog"></span></a></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/logout\')}"><a href="" ng-click=logout()>Logout</a></li></ul></div></div></div>'),a.put("components/notifications/notifications.html",'<span ng-controller=NotificationsCtrl class=notification-container><ul growl-notifications class=growl-notifications></ul><div ng-repeat="notification in notifications track by $id($index)"><div growl-notification class="alert alert-{{notification.type}} fading growl-notification">{{notification.message}}</div></div></span>')}]);